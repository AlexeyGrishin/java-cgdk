package model2

class Game(
            val randomSeed: Long,
            val tickCount: Int,
            val worldWidth: Double,
            val worldHeight: Double,
            val goalNetTop: Double,
            val goalNetWidth: Double,
            val goalNetHeight: Double,
            val rinkTop: Double,
            val rinkLeft: Double,
            val rinkBottom: Double,
            val rinkRight: Double,
            val afterGoalStateTickCount: Int,
            val overtimeTickCount: Int,
            val defaultActionCooldownTicks: Int,
            val swingActionCooldownTicks: Int,
            val cancelStrikeActionCooldownTicks: Int,
            val actionCooldownTicksAfterLosingPuck: Int,
            val stickLength: Double,
            val stickSector: Double,
            val passSector: Double,
            val hockeyistAttributeBaseValue: Int,
            val minActionChance: Double,
            val maxActionChance: Double,
            val strikeAngleDeviation: Double,
            val passAngleDeviation: Double,
            val pickUpPuckBaseChance: Double,
            val takePuckAwayBaseChance: Double,
            val maxEffectiveSwingTicks: Int,
            val strikePowerBaseFactor: Double,
            val strikePowerGrowthFactor: Double,
            val strikePuckBaseChance: Double,
            val knockdownChanceFactor: Double,
            val knockdownTicksFactor: Double,
            val maxSpeedToAllowSubstitute: Double,
            val substitutionAreaHeight: Double,
            val passPowerFactor: Double,
            val hockeyistMaxStamina: Double,
            val activeHockeyistStaminaGrowthPerTick: Double,
            val restingHockeyistStaminaGrowthPerTick: Double,
            val zeroStaminaHockeyistEffectivenessFactor: Double,
            val speedUpStaminaCostFactor: Double,
            val turnStaminaCostFactor: Double,
            val takePuckStaminaCost: Double,
            val swingStaminaCost: Double,
            val strikeStaminaBaseCost: Double,
            val strikeStaminaCostGrowthFactor: Double,
            val cancelStrikeStaminaCost: Double,
            val passStaminaCost: Double,
            val goalieMaxSpeed: Double,
            val hockeyistMaxSpeed: Double,
            val struckHockeyistInitialSpeedFactor: Double,
            val hockeyistSpeedUpFactor: Double,
            val hockeyistSpeedDownFactor: Double,
            val hockeyistTurnAngleFactor: Double,
            val versatileHockeyistStrength: Int,
            val versatileHockeyistEndurance: Int,
            val versatileHockeyistDexterity: Int,
            val versatileHockeyistAgility: Int,
            val forwardHockeyistStrength: Int,
            val forwardHockeyistEndurance: Int,
            val forwardHockeyistAgility: Int,
            val forwardHockeyistDexterity: Int,
            val defencemanHockeyistStrength: Int,
            val defencemanHockeyistEndurance: Int,
            val defencemanHockeyistDexterity: Int,
            val defencemanHockeyistAgility: Int,
            val minRandomHockeyistParameter: Int,
            val maxRandomHockeyistParameter: Int,
            val struckPuckInitialSpeedFactor: Double,
            val puckBindingRange: Double) {

}
